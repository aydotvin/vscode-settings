[
  {
    "key": "ctrl+shift+m",
    "command": "-workbench.actions.view.problems"
  },
  {
    "key": "ctrl+shift+a",
    "command": "editor.foldAll",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+k ctrl+0",
    "command": "-editor.foldAll",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+o",
    "command": "-workbench.action.files.openFile"
  },
  {
    "key": "ctrl+o",
    "command": "-workbench.action.files.openLocalFile",
    "when": "remoteFileDialogVisible"
  },
  {
    "key": "ctrl+k o",

    "command": "-workbench.action.files.showOpenedFileInNewWindow"
  },
  {
    "key": "ctrl+k e",
    "command": "-workbench.files.action.focusOpenEditorsView",
    "when": "workbench.explorer.openEditorsView.active"
  },
  {
    "key": "ctrl+k ctrl+o",
    "command": "-workbench.action.files.openFolder"
  },
  {
    "key": "ctrl+k ctrl+o",
    "command": "-workbench.action.files.openLocalFolder",
    "when": "remoteFileDialogVisible"
  },
  {
    "key": "ctrl+shift+oem_4",
    "command": "workbench.action.files.openFolder"
  },
  {
    "key": "ctrl+q",
    "command": "-workbench.action.quickOpenView"
  },
  {
    "key": "ctrl+q",
    "command": "-workbench.action.quickOpenNavigateNextInViewPicker",
    "when": "inQuickOpen && inViewsPicker"
  },
  {
    "key": "ctrl+q",
    "command": "editor.action.commentLine",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+oem_2",
    "command": "-editor.action.commentLine",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+oem_3",
    "command": "workbench.action.terminal.toggleTerminal"
  },
  {
    "key": "ctrl+oem_3",
    "command": "-workbench.action.terminal.toggleTerminal"
  },
  {
    "key": "ctrl+shift+q",
    "command": "-workbench.action.quickOpenNavigatePreviousInViewPicker",
    "when": "inQuickOpen && inViewsPicker"
  },
  {
    "key": "ctrl+shift+oem_3",
    "command": "-workbench.action.terminal.new"
  },
  {
    "key": "ctrl+shift+o",
    "command": "-workbench.action.gotoSymbol"
  },
  {
    "key": "ctrl+o",
    "command": "-workbench.action.files.openFileFolder",
    "when": "isMacNative && openFolderWorkspaceSupport"
  },
  {
    "key": "ctrl+o",
    "command": "workbench.action.files.openFile"
  },
  {
    "key": "ctrl+shift+g oem_2",
    "command": "-gitlens.gitCommands",
    "when": "!gitlens:disabled && config.gitlens.keymap == 'chorded'"
  },
  {
    "key": "ctrl+shift+g oem_period",
    "command": "-gitlens.diffWithNext",
    "when": "editorTextFocus && !isInDiffEditor && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /revision/"
  },
  {
    "key": "ctrl+shift+g oem_period",
    "command": "-gitlens.diffWithNextInDiffLeft",
    "when": "editorTextFocus && isInDiffEditor && !isInDiffRightEditor && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /revision/"
  },
  {
    "key": "ctrl+shift+g oem_period",
    "command": "-gitlens.diffWithNextInDiffRight",
    "when": "editorTextFocus && isInDiffRightEditor && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /revision/"
  },
  {
    "key": "ctrl+shift+g oem_comma",
    "command": "-gitlens.diffWithPrevious",
    "when": "editorTextFocus && !isInDiffEditor && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /tracked/"
  },
  {
    "key": "ctrl+shift+g oem_comma",
    "command": "-gitlens.diffWithPreviousInDiffLeft",
    "when": "editorTextFocus && isInDiffEditor && !isInDiffRightEditor && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /tracked/"
  },
  {
    "key": "ctrl+shift+g oem_comma",
    "command": "-gitlens.diffWithPreviousInDiffRight",
    "when": "editorTextFocus && isInDiffRightEditor && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /tracked/"
  },
  {
    "key": "ctrl+shift+g shift+oem_period",
    "command": "-gitlens.diffWithWorking",
    "when": "editorTextFocus && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /revision/"
  },
  {
    "key": "ctrl+shift+g shift+oem_comma",
    "command": "-gitlens.diffLineWithPrevious",
    "when": "editorTextFocus && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /tracked/"
  },
  {
    "key": "ctrl+shift+g shift+h",
    "command": "-gitlens.showQuickRepoHistory",
    "when": "!gitlens:disabled && config.gitlens.keymap == 'chorded'"
  },
  {
    "key": "ctrl+shift+g h",
    "command": "-gitlens.showQuickFileHistory",
    "when": "!gitlens:disabled && config.gitlens.keymap == 'chorded'"
  },
  {
    "key": "ctrl+shift+g c",
    "command": "-gitlens.showQuickCommitFileDetails",
    "when": "editorTextFocus && !gitlens:disabled && config.gitlens.keymap == 'chorded'"
  },
  {
    "key": "ctrl+shift+g s",
    "command": "-gitlens.showQuickRepoStatus",
    "when": "!gitlens:disabled && config.gitlens.keymap == 'chorded'"
  },
  {
    "key": "ctrl+shift+g shift+b",
    "command": "-gitlens.toggleCodeLens",
    "when": "editorTextFocus && !gitlens:disabled && !gitlens:disabledToggleCodeLens && config.gitlens.keymap == 'chorded'"
  },
  {
    "key": "ctrl+shift+g g",
    "command": "-workbench.view.scm",
    "when": "workbench.scm.active && !gitlens:disabled && config.gitlens.keymap == 'chorded'"
  },
  {
    "key": "ctrl+shift+g",
    "command": "-workbench.view.scm",
    "when": "workbench.scm.active"
  },
  {
    "key": "ctrl+shift+g b",
    "command": "-gitlens.toggleFileBlame",
    "when": "editorTextFocus && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /blameable/"
  },
  {
    "key": "ctrl+shift+g",
    "command": "workbench.view.scm"
  },
  {
    "key": "alt+b",
    "command": "-gitlens.toggleFileBlame",
    "when": "editorTextFocus && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /blameable/"
  },
  {
    "key": "ctrl+shift+b",
    "command": "-workbench.action.tasks.build"
  },
  {
    "key": "ctrl+shift+b",
    "command": "gitlens.toggleFileBlameInDiffLeft"
  },
  {
    "key": "ctrl+k ctrl+shift+w",
    "command": "-workbench.action.closeAllGroups"
  },
  {
    "key": "ctrl+k ctrl+w",
    "command": "-workbench.action.closeAllEditors"
  },
  {
    "key": "ctrl+k w",
    "command": "-workbench.action.closeEditorsInGroup"
  },
  {
    "key": "ctrl+shift+w",
    "command": "-workbench.action.closeWindow"
  },
  {
    "key": "ctrl+shift+w",
    "command": "workbench.action.closeAllEditors"
  },
  {
    "key": "shift+alt+f",
    "command": "-editor.action.formatDocument",
    "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
  },
  {
    "key": "shift+alt+f",
    "command": "-editor.action.formatDocument.none",
    "when": "editorTextFocus && !editorHasDocumentFormattingProvider && !editorReadonly"
  },
  {
    "key": "ctrl+k ctrl+f",
    "command": "-editor.action.formatSelection",
    "when": "editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+alt+f",
    "command": "-notebook.formatCell",
    "when": "editorHasDocumentFormattingProvider && editorTextFocus && inCompositeEditor && notebookEditable && !editorReadonly && activeEditor == 'workbench.editor.notebook'"
  },
  {
    "key": "shift+alt+f",
    "command": "-notebook.format",
    "when": "notebookEditable && !editorTextFocus && activeEditor == 'workbench.editor.notebook'"
  },
  {
    "key": "ctrl+k ctrl+shift+s",
    "command": "-workbench.action.files.saveWithoutFormatting"
  },
  {
    "key": "ctrl+e",
    "command": "-workbench.action.quickOpen"
  },
  {
    "key": "ctrl+e",
    "command": "-workbench.action.quickOpenNavigateNextInFilePicker",
    "when": "inFilesPicker && inQuickOpen"
  },
  {
    "key": "ctrl+e",
    "command": "editor.action.formatDocument"
  },
  {
    "key": "ctrl+e",
    "command": "notebook.formatCell"
  },
  {
    "key": "ctrl+e",
    "command": "editor.action.formatDocument.none"
  },
  {
    "key": "ctrl+e",
    "command": "notebook.format"
  },
  {
    "key": "ctrl+r",
    "command": "-workbench.action.reloadWindow",
    "when": "isDevelopment"
  },
  {
    "key": "ctrl+r",
    "command": "-workbench.action.openRecent"
  },
  {
    "key": "ctrl+r",
    "command": "-workbench.action.quickOpenNavigateNextInRecentFilesPicker",
    "when": "inQuickOpen && inRecentFilesPicker"
  },
  {
    "key": "ctrl+r",
    "command": "editor.action.formatSelection"
  },
  {
    "key": "ctrl+e",
    "command": "prettier.forceFormatDocument"
  },
  {
    "key": "ctrl+shift+oem_4",
    "command": "-editor.fold",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+shift+oem_4",
    "command": "-notebook.fold",
    "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
  },
  {
    "key": "ctrl+k ctrl+oem_2",
    "command": "-editor.foldAllBlockComments",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+k ctrl+8",
    "command": "-editor.foldAllMarkerRegions",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+k ctrl+oem_minus",
    "command": "-editor.foldAllExcept",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+k ctrl+1",
    "command": "-editor.foldLevel1",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+k ctrl+2",
    "command": "-editor.foldLevel2",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+k ctrl+3",
    "command": "-editor.foldLevel3",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+k ctrl+4",
    "command": "-editor.foldLevel4",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+k ctrl+5",
    "command": "-editor.foldLevel5",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+k ctrl+6",
    "command": "-editor.foldLevel6",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+k ctrl+7",
    "command": "-editor.foldLevel7",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+k ctrl+oem_4",
    "command": "-editor.foldRecursively",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "left",
    "command": "-notebook.fold",
    "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
  },
  {
    "key": "right",
    "command": "-notebook.unfold",
    "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
  },
  {
    "key": "ctrl+shift+oem_6",
    "command": "-notebook.unfold",
    "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
  },
  {
    "key": "ctrl+k ctrl+l",
    "command": "-editor.toggleFold",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+l",
    "command": "workbench.action.editor.changeLanguageMode",
    "when": "!notebookEditorFocused"
  },
  {
    "key": "ctrl+oem_6",
    "command": "workbench.action.navigateEditorGroups"
  },
  {
    "key": "ctrl+shift+alt+oem_4",
    "command": "-jupyter.extendSelectionByCellAbove",
    "when": "editorTextFocus && jupyter.hascodecells && !jupyter.webExtension && !notebookEditorFocused"
  },
  {
    "key": "ctrl+o",
    "command": "-workbench.action.files.openFolderViaWorkspace",
    "when": "!openFolderWorkspaceSupport && workbenchState == 'workspace'"
  },
  {
    "key": "ctrl+k f",
    "command": "-workbench.action.closeFolder",
    "when": "emptyWorkspaceSupport && workbenchState != 'empty'"
  },
  {
    "key": "ctrl+shift+oem_6",
    "command": "-editor.unfold",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+shift+alt+oem_6",
    "command": "-jupyter.extendSelectionByCellBelow",
    "when": "editorTextFocus && jupyter.hascodecells && !jupyter.webExtension && !notebookEditorFocused"
  },
  {
    "key": "ctrl+shift+oem_6",
    "command": "workbench.action.closeFolder"
  },
  {
    "key": "ctrl+shift+v",
    "command": "-markdown.showPreview",
    "when": "!notebookEditorFocused && editorLangId == 'markdown'"
  },
  {
    "key": "f5",
    "command": "-workbench.action.debug.continue",
    "when": "debugState == 'stopped'"
  },
  {
    "key": "shift+f5",
    "command": "-workbench.action.debug.disconnect",
    "when": "focusedSessionIsAttach && inDebugMode"
  },
  {
    "key": "ctrl+shift+f5",
    "command": "-workbench.action.debug.restart",
    "when": "inDebugMode"
  },
  {
    "key": "f5",
    "command": "-workbench.action.debug.start",
    "when": "debuggersAvailable && debugState == 'inactive'"
  },
  {
    "key": "ctrl+f5",
    "command": "-workbench.action.debug.run",
    "when": "debuggersAvailable && debugState != 'initializing'"
  },
  {
    "key": "shift+f5",
    "command": "-workbench.action.debug.stop",
    "when": "inDebugMode && !focusedSessionIsAttach"
  },
  {
    "key": "alt+f5",
    "command": "-workbench.action.editor.nextChange",
    "when": "editorTextFocus && !textCompareEditorActive"
  },
  {
    "key": "shift+alt+f5",
    "command": "-workbench.action.editor.previousChange",
    "when": "editorTextFocus && !textCompareEditorActive"
  },
  {
    "key": "ctrl+f5",
    "command": "-debug.openView",
    "when": "!debuggersAvailable"
  },
  {
    "key": "f5",
    "command": "-debug.openView",
    "when": "!debuggersAvailable"
  },
  {
    "key": "alt+f5",
    "command": "-workbench.action.compareEditor.nextChange",
    "when": "textCompareEditorVisible"
  },
  {
    "key": "shift+alt+f5",
    "command": "-workbench.action.compareEditor.previousChange",
    "when": "textCompareEditorVisible"
  },
  {
    "key": "ctrl+shift+r",
    "command": "-editor.action.refactor",
    "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+r",
    "command": "-rerunSearchEditorSearch",
    "when": "inSearchEditor"
  },
  {
    "key": "ctrl+shift+r",
    "command": "-workbench.action.quickOpenNavigatePreviousInRecentFilesPicker",
    "when": "inQuickOpen && inRecentFilesPicker"
  },
  {
    "key": "ctrl+shift+r",
    "command": "workbench.action.reloadWindow"
  },
  {
    "key": "ctrl+k t",
    "command": "-notebook.cell.collapseCellOutput",
    "when": "notebookCellHasOutputs && notebookCellListFocused && !inputFocus && !notebookCellOutputIsCollapsed"
  },
  {
    "key": "ctrl+k t",
    "command": "-notebook.cell.expandCellOutput",
    "when": "notebookCellListFocused && notebookCellOutputIsCollapsed"
  },
  {
    "key": "ctrl+k ctrl+t",
    "command": "-workbench.action.selectTheme"
  },
  {
    "key": "ctrl+k ctrl+i",
    "command": "-workbench.action.showTreeHover",
    "when": "customTreeView && listFocus && !inputFocus"
  },
  {
    "key": "ctrl+oem_period",
    "command": "-docs.write",
    "when": "editorTextFocus && config.docwriter.hotkey.windows == 'Ctrl + .' && editorLangId =~ /typescript|javascript|python|php|java|c|cpp|csharp|dart|ruby|go|rust/"
  },
  {
    "key": "ctrl+t",
    "command": "-workbench.action.showAllSymbols"
  },
  {
    "key": "ctrl+shift+c",
    "command": "-workbench.action.terminal.openNativeConsole",
    "when": "!terminalFocus"
  },
  {
    "key": "alt+l",
    "command": "-toggleSearchEditorContextLines",
    "when": "inSearchEditor"
  },
  {
    "key": "alt+l",
    "command": "-toggleFindInSelection",
    "when": "editorFocus"
  },
  {
    "key": "alt+l",
    "command": "turboConsoleLog.displayLogMessage"
  },
  {
    "key": "ctrl+alt+l",
    "command": "-turboConsoleLog.displayLogMessage"
  }
]
